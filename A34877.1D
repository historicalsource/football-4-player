	.TITLE F4INT
	.RADIX 16
	.ASECT
	.ENABLE	AMA
	.GLOBL EOZP,$COINA,$LAM,$LMBIT,$CNSTT,$PSTSL,$CMODE
	.GLOBL $CCTIM,$LMTIM,$INTCT
	.GLOBL EOPROG,APROGT
	.GLOBL GCKS6,GCKS7
	.GLOBL CKS6,CKS7
	.INCLUDE F4COMN
	.PAGE
	.SBTTL INTERRUPT
	.CSECT
;ENTERED 4 TIMES/FRAME, AT LINES 64, 128, 192, & 240.
IRQ:	PHA			;SAVE REGS
	TXA
	PHA
	TYA
	PHA
	CLD			;SET HEX
	.SBTTL	SOFTWARE WATCHDOG
;BELOW CODE CHECKS S.P., P.C. & PSW FOOR VALIDITY
	TSX			;X <- SP
	BPL ABORT		;STACK TOO DEEP, ABORT
	LDA AX,104		;GET OLD PSW
	AND I,10		;BREAK?
	BNE ABORT		;YES, ABORT
	LDA AX,106		;PCH
;
	CMP I,PROG/100		;CHECK LOW LIMIT
APROGT	=.-1			;ADDRESS OF PROGRAM TEST
	BCC ABORT
	LDA AX,105
	CMP I,0
	.=.-1
	.WORD MOOLAH
	.=.-1
	LDA AX,106
	SBC I,0
	.=.-1
	.ENABL M68
	.WORD MOOLAH
	.DSABL M68
	.=.-1

;ABOVE 12 LINES DOES A D.P. COMPARE OF PC:FTAB

	BCC IRQCON		;IF BORROW, P.C. IS IN BOUNDS
ABORT:	JMP RESET		;ABORT ENTRY, DO POWER-ON
CKS6:	.BYTE GCKS6

	.REPT 30
	.BYTE 0
	.ENDR
IRQCON:
	LDA SYNC		;CHECK SYNC WORD
	CMP I,6
	BCS ABORT

;IF SYNC >= 6, PROCESSOR IS IN "PHANTOM-LOOP"

	STA A,WTCHDG		;ALL O.K., HIT DOG
	JSR TBREAD		; READ THE TBALL COUNTERS, ETC.
	INC INTCNT		;COUNT INTERRUPTS
	BIT VENDSC		; TEST FOR ENDSCREEN.
	BPL 25$			;D7 ON==>ENDSCREEN.
				;---------
	LDA INTCNT		; YES, AT ENDSCREEN.
	AND I,0FC		;PHASE LOCK FOR LED'S
	STA INTCNT
	DEC FIELD		;COUNT FIELDS
	BPL 10$			;--------
	LDA I,2			;3 FIELD'S PER FRAME
	STA FIELD		;(2,1,0)
	INC SYNC		;SYNC UP MAINLINE
10$:
	LDA MOTDON		;IF MOTION UPDATE HAS NOT YET BEEN DONE
	BNE 20$			;THIS FRAME, THEN DO IT
	JSR MOTUP
20$:				;---
	LDA FRAMFD		;FIRST DOWN,#30
	STA HHPOS+30.		;
	LDA FDPICT		;
	STA HPICT+30.		;
	LDA I,248.
	STA HVPOS+30.		;
				;---
				;---
25$:	JSR DEBNCE		; DEBOUNCE SWITCHES.

	.SBTTL	MUX OBJECT, LOC 30.
MUX30:	
	LDA INTCNT
	AND I,3
	BEQ 40$			;VBLANK ALREADY DONE
				;---
	CMP I,2			;MUX'ING OBJECT 15 (+30.)
	BEQ 20$
	BCC 10$
				;---
				;INT #3
	LDA FRAMFD		;PLACE FIRST DOWN MARKER
	STA HHPOS+30.		;ON BOTTOM OF SCREEN
	LDA FDPICT
	STA HPICT+30.
	LDA I,16.
	BNE 35$			;** ALWAYS **
10$:				;---
	LDA FRAMSC		;INT #1
	STA HHPOS+30.		;PLACE SCRIMMAGE ABOVE HASHMARKS
	LDA SCPICT
	STA HPICT+30.
	LDA I,09F
	BNE 35$			;**ALWAYS**
20$:				;---
	LDA I,069		;INT #2
				;DUPLICATE SCRIMMAGE
				;BENEATH HASHMARKS
35$:				;---
	STA HVPOS+30.		;DO VERTICAL POSITION LAST
				;---
40$:
	.SBTTL	HANDLE SOUNDS
SOUND:	LDA ATRACT
	BNE 10$
	LDA I,0
	STA BEEP
	STA WHISTL
10$:	LDA WHISTL	;WHISTLE
	BEQ 1$
	DEC WHISTL	;TIME IT
	LDA INTCNT	;WARBLE
1$:	LSR
	LSR
	AND I,1
	ORA BEEP		;STEADY TONE
	LSR THUD	;HIT SOUND
	BCC 2$
	ORA I,6
2$:
	EOR I,4		;RESET CROWD SOUND DURING HITS
				;COIN CTR 2
	ORA I,80		;TURN ON
	LDY $CCTIM+1
	BMI 22$
	EOR I,80		;UNLESS IT SHOULD BE OFF
22$:
	STA TOUT1
	LDA I,20		;A) SOUNDS ON, B) SLAM SWITCH MASK
	LDY ATRACT		;
	BNE 3$			;USE NORMAL SOUNDS IN GAME
				;---
				;IF ATTRACT AND SLAM, GIVE ALARM.  ELSE KEEP SOUNDS OFF
	AND INPUT+2
	BNE 25$			;SLAM OFF ==> SOUNDS OFF
	LDA I,0FF		;SLAM ON ==> TURN ON ABUSE ALARM
	STA ABUSE
25$:	LDA ABUSE
	BEQ 3$			;IF ABUSE IS ON, THEN
	DEC ABUSE		;TIME OUT THE ALARM
	INC TOUT1		;TURN ON SIREN
	LDA I,2F		;TURN ON CROWDS
3$:				;---
	ORA CROWD		;INCLUDE CROWD SOUND
	LDY $CCTIM+2		;COIN-COUNTER #1
	BPL 4$
	ORA I,10	;TURN IT ON
4$:	STA A,OUT2

	.SBTTL	HANDLE QUADRATURE TRACKBALL
TBALL:				;---
	JSR TBCALC		;TBALL CALCULATIONS
	JSR MOOLAH		;COIN ROUTINE
;IF MOTUP WAS NOT EXECUTED, WE ARE POSSIBLY ONLY '?' CYCLES INTO V-BLANKING
;IF WE WERE TO "STA A,INTACK" NOW, BEFORE
;LINE 256, WE WOULD BE INTERRUPTED AGAIN BY THE FALLING EDGE OF 32V @ LINE
;256.
12$:				;---
	BIT VENDSC		; WAIT UNTIL ENDSCREEN IS OVER.
	BMI 12$			;
2$:	STA A,INTACK		;ACKNOWLEDGE INTERRUPTS

	.SBTTL	MULTIPLEX LED CATHODES
MUXLED:	LDA INTCNT		;GET INTERUPT CTR
	AND I,3			;LSB'S GIVE QUARTER OF SCRN
	TAX			;PICK UP BIT TO LIGHT
	LDA ZX,LEDWD-1		;ANODE "A" NOT USED, SO RAM IS DON'T-CARE
	AND I,0F
	ORA SSTOGL
	LDY $CCTIM		;COIN COUNTER 3
	BPL 10$
	ORA I,20
10$:
	STA A,OUT3		;STORE OUT TO CATHODES


IRQRET:				;---
	PLA
	TAY
	PLA
	TAX
	PLA
M40:	RTI			;RTI=40 HEX, USED TO TEST TEST SW.

				;---
	.SBTTL	DE-BOUNCE SWITCHES
;NOTE-SWITCHES ARE LOW-TRUE (107 CYCLES, INCL JSR)
DEBNCE:	LDX I,2
1$:	LDY ZX,INPUT		;READ SWITCHES
	LDA ZX,DBSW		;SAVE OLD SWITCHES
	STY ZX,DBSW		;REPLACE WITH NEW
	TAY			;COPY OLD
	AND ZX,DBSW		;MAKE ONES WHERE BOTH OFF
	ORA ZX,SWSTAT
	STA ZX,SWSTAT		;TURN OFF IN STATUS
	TYA			;GET BACK OLD
	ORA ZX,DBSW		;MAKE ZEROES WHERE BOTH ON
	AND ZX,SWSTAT		;TURN ON IN STATUS
	STA ZX,SWSTAT		;SAVE NEW STATUS
	DEX
	DEX
	BPL 1$
	RTS


	.SBTTL	MOVE MOTION OBJECT PARAMS
;-13.-18 SCAN LINES
MOTUP:	LDA SLOCK
	BNE 4$
	INC MOTDON
	LDX I,28.		;OBJ. 0-14, 2 BYTES @
1$:	LDA X,HORDIS
	STA AX,HHPOS		;OUT TO HARDWARE
	LDA X,VERDIS		;THIS ONE'S PRE-ADJUSTED
3$:	STA X,HVPOS		;CORRECT OR BLANKED, OUT TO HDW.
	DEX
	DEX
	BPL 1$			;WHILE OBJ # >= 0
				;---
	LDA SCRODS
	STA A,SFHPOS		;STORE TO SCROLLFIELD DISPLACEMENT
				;---
	LDA SCROSC		;LOCK THE
	STA FRAMSC		;SCROLL RELATIVE
	LDA SCROFD		;POSITIONS TO
	STA FRAMFD		;THIS FRAME
				;---
	LDA INTCNT
	AND I,30		;4 HZ, 75% ON
	BNE 4$
				;---
	LDA ATRACT		;BLINK ALL OF THE CONTROLLED MEN
	BNE 32$			;
	LDA SSTOGL		;IF IN ATTRACT, FOLLOW
	AND I,010		;THE 2/4 PLAYER SWITCH
	BEQ 30$			;
	LDA I,0FF		;4 PLAYER
	BNE 32$			;**ALWAYS**
30$:				;
	LDA I,0F3		;2 PLAYER
32$:				;
	STA IJ			;
				;---
	LDA I,0			;PREPARE TO BLINK MEN
				;
	LSR IJ			;BIT ON -> CONTROLLED --> BLINK
	BCC 35$			;
	LDX CTLPTR		;POINTS TO LEFT JOYSTICK MAN
	BMI 35$			;NO SUCH FELLA
	STA AX,HVPOS		;ELSE BLINK MAN
35$:	LSR IJ
	BCC 37$
	LDX CTLPTR+2		;RIGHT JOYSTICK MAN
	BMI 37$
	STA X,HVPOS
37$:
	LSR IJ
	BCC 39$
	LDX CTLPTR+4		;PLAYER 1, RIGHT HAND
	BMI 39$
	STA X,HVPOS
39$:
	LSR IJ
	BCC 4$
	LDX CTLPTR+6		;PLAYER 2, RIGHT HAND
	BMI 4$
	STA AX,HVPOS
4$:	RTS

	.SBTTL POWER-ON-RESET
RESET:	LDX I,0FF
	TXS			;SET UP STACK
;NOW FALL THROUGH TO CLEAR RAM, FOR BOTH GAME AND TEST
	.SBTTL SELF-TEST
STEST:	CLD
	LDX I,0
	TXA
1$:	STA ZX,0
	STA X,100		;ZERO OUT VARIABLES
	STA X,200		;BLANK OUT RIGHT MESSAGE
	STA X,300		;BLANK OUT LEFT MESSAGE
	STA AX,SCRFLD
	STA X,SCRFLD+100
	STA X,SCRFLD+200
	STA X,SCRFLD+300
	DEX
	BNE 1$
	STA A,OUT1		;HIT KICKER
	BIT A,TEST		;CHECK TEST SW.
	BVC TREPT		;BRANCH IF ON
	JMP START		;ELSE GO TO GAME MODE

	.SBTTL	ZERO-PAGE TEST
TREPT:	LDY I,0			;LOOP REG Y THRU PAGE
10$:				;---
				;VERIFY THAT CURRENT LOC IS STILL ALL ZERO
	STA WTCHDG
	LDA Y,0
	ORA Y,100
	ORA Y,200
	ORA Y,300
	ORA Y,SCRFLD
	ORA Y,SCRFLD+100
	ORA Y,SCRFLD+200
	ORA Y,SCRFLD+300
	BNE 32$			;ERROR IF NOT ALL ZERO
	LDA I,80		;TEST PATTERN IS 9-BIT WALKING ONE
	CLC			;D8 IS ZERO
20$:	TAX			;SAVE THE NEW MASTER TEST PATTERN
	TXS
30$:
	STA Y,0			;STORE EACH SEED
	ROR
	STA Y,100
	ROR
	STA Y,200
	ROR
	STA Y,300
	ROR
	STA Y,SCRFLD
	ROR
	STA Y,SCRFLD+100
	ROR
	STA Y,SCRFLD+200
	ROR
	STA Y,SCRFLD+300
	ROR			;CYCLE PATTERN BACK TO START
	ROR
	EOR Y,0			;TEST FOR THE SEED
	BNE 60$			;EXIT IF ERROR
	TXA
	ROR			;GET THE NEXT SEED
	TAX
	EOR Y,100
32$:	BNE 60$			;ALSO USED AS TRANSFER FOR LONG JUMP
	TXA
	ROR
	TAX
	EOR Y,200
	BNE 60$
	TXA
	ROR
	TAX
	EOR Y,300
	BNE 60$
	TXA
	ROR
	TAX
	EOR Y,SCRFLD
	BNE 60$
	TXA
	ROR
	TAX
	EOR Y,SCRFLD+100
	BNE 60$
	TXA
	ROR
	TAX
	EOR Y,SCRFLD+200
	BNE 60$
	TXA
	ROR
	TAX
	EOR Y,SCRFLD+300
	BNE 60$
	TXA			;GET BACK TO CURRENT PATTERN
	ROR
	ROR			;REMEMBER TO KEEP CARRY INVOLVED
				;---
	BCC 40$			;ALTERNATE WALKING ZERO WITH
	BEQ 40$			;  WALKING ONES
				;---
	TSX			;JUST FINISHED WALKING ZERO
	BEQ 45$			;FINISHED SETTING ALL BITS ON
	TXA			;WALK THE PATTERN AROUND
	CLC
	ROR
	JMP 20$			;DO THE NEXT WALKING ONE (BPL-ALWAYS)
40$:				;---
	CMP I,1			;JUST FINISHED WALKING ONE
42$:	EOR I,0FF		;COMPLEMENT TEST PATTERN FOR WALKING ZERO
	BEQ 42$			;PATTERN=0==>CYCLED THRU ALL TESTS SO STORE ALL ON
	TAX
	JMP 30$			;ELSE, TRY THE PATTERN (BNE-ALWAYS)
45$:				;---
	INY			;PREPARE TO TEST NEXT LOCATION
	BEQ 50$			;TESTED ALL OF MEMORY-ITS OK
	JMP 10$			;ELSE TEST NEXT LOCATION (BNE-ALWAYS)
				;---
50$:				;RAM OK
	LDX I,19.
	BNE 65$			;ALWAYS
60$:	LDX I,16.		;BAD RAM
65$:	LDA I,0			;CLEAR TOP OF SCREEN
	LDY I,0
68$:
	STA Y,SCRFLD
	STA Y,0			;CLEAR OUT Z-PAGE
	INY
	BNE 68$
	LDY I,16.
	.SBTTL	REPORT MEMORY STATUS
MEMREP:	LDA AX,ERMSG
	STA AY,ALPHL+28
	AND I,3F		;CLEAR REFLECT BITS
	BEQ 1$
	CLC
	ADC I,58
1$:	STA AY,SCRFLD+4		;GET A LITTLE AWAY FROM THE EDGE
	DEX
	DEY
	BMI PATSCN
	CPY I,9
	BNE MEMREP

	.SBTTL	ROM TEST
ROMTST:	LDX I,0			;PROG STARTS ON EVEN PG.
	STX ADL			;LOW ADDRESS PTR
	TXS			;START S:=0
	LDA I,PROG&0FF00/100	;HIGH BYTE OF PROG ADDR
	STA ADH			;HIGH ADDRESS PTR
	LDX I,31.		;32 PAGES OF ROM(8K)
	LDA I,21		;SEED FOR L.R.C.
	STA K			;GET SOMETHING IN EACH  NYBBLE (21,43,65...)
10$:	LDY I,0
	STX A,WTCHDG		;MUZZLE DOG
1$:	EOR NY,ADL		;LONGITUDINAL PARITY
	INY
	BNE 1$			;LOOP FOR 1 PAGE
	TAY			;SAVE LRC
	TXA
	AND I,3			;2 LSB=PAGE IN ROM
	CMP I,1			;CLEAR CARRY IF END OF ROM
	TYA			;PUT LRC BACK
	BCS 3$			;SKIP IF IN ROM
	BEQ 2$			;SKIP IF OK
	PHA			;ELSE SNAP FOR ANALYZER
2$:
	LDA K			;TEST ROUTINE HAS SEED OF 0
;	(CLC)			;BUT SINCE THIS IS RUNNING, IT MUST BE
				;IN CORRECT SLOT
	ADC I,22		;EACH 1K HAS DIFFERENT SEED
	STA K
3$:	INC ADH			;BUMP PTR
	DEX			;COUNT PAGES
	BPL 10$
	TSX			;HAS S CHANGED (ANY PUSHES?)
	BEQ 4$			;NO, OK
	LDX I,6			;ELSE POINT TO "BAD ROM"
	BNE 5$			;** ALWAYS **
4$:	LDX I,9			;ROM OK
5$:	LDY I,6
	BNE MEMREP		;(ALWAYS)
	.SBTTL	PATTERN SCREEN
PATSCN:	LDX I,0
1$:	TXA
	STA AX,ALPHR
	STA AX,ALPHL+40
	STA AX,SCRFLD+100
	STA AX,SCRFLD+200
	STA AX,SCRFLD+300
	INX
	BNE 1$
	STX A,SFHPOS
	TXS			;S=0==>IN-LINE SUBROUTINES
				;---
	LDX I,6			;PREPARE CHARACTERS (4 SETS OF 4) TO REPRESENT THE
				;FOUR TRACKBALLS
				;CHARACTER	    TEAM, PLAYER
	LDA I,04		; 04 			T2,R
20$:				; C4			T1,R
	STA AX,HPICT+<2*0>	; 84			T2,L
	STA AX,HPICT+<2*4>	; 44			T1,L
	STA AX,HPICT+<2*8>	;
	STA AX,HPICT+<2*12.>	;
	CLC			;
	ADC I,0C0		;
	DEX			;
	DEX			;
	BPL 20$			;
				;---

	.SBTTL	SWITCH TEST
SWTEST:				;---
				;FIRST, READ THE SWITCHES AND TBALL COUNTERS
				;
	.SBTTL	READ TBALL COUNTERS ET AL.
TBREAD:				;---
	LDA READ		;INPUT (0):=READ
	STA INPUT+0		;
	LDA TOUT1		;
	AND I,<LD1.0&LD2.0>	;PREPARE FOR READING/LOADING COUNTERS
	TAY			;
	ORA I,LD2.1		;
				;---
	LDX READ1		;READ THE LEFT BANK OF COUNTERS
	STX TBCTR+0		;
	LDX READ2		;
	STX TBCTR+2		;
				;---
	STA OUT1		;READ THE RIGHT BANK OF COUNTERS
	LDX READ1		;
	STX TBCTR+4		;
	LDX READ2		;
	STX TBCTR+6		;
				;---
	STY OUT1		; STOP BOTH LEFT AND RIGHT BANKS FROM 
	LDX READ1		; COUNTING. READ SWITCHES & TBALL DIRECTIONS.
	STX TBDIR		;
	LDX READ2		;
	STX INPUT+2		;
				;---
	TAY			; PREPARE TO RESTART RIGHT BANK COUNTING.
	ORA I,<LD1.1!LD2.1>	; PREPARE TO RESTART LEFT BANK COUNTING.
				;---
	STY OUT1		; RESTART RIGHT BANK, THEN IMMEDIATELY
	LDX READ1		;READ THE COUNTERS STARTING VALUE
	LDY READ2		;
	STX NEWTB+4		;
	STY NEWTB+6		;
	STA OUT1		; RESTART LEFT BANK. NOW, READ ITS STARTING
	LDX READ1		; VALUES QUICKLY TO AVOID COUNTING ERRORS.
	LDY READ2		;
	STX NEWTB+0		; THE NEW INITIAL TBALL STARTING VALUES FOR
	STY NEWTB+2		; LEFT PLAYERS, BOTH TEAMS
				;---
	TSX
	BPL 63$
	RTS
63$:
				;---
	LDY K
	LDX I,0			;CLR X
	LDA A,INPUT+2		;
	ORA I,0F		; IGNORE OPTION SWITCHES D3-D0
	SEC
	ROL
1$:	BCS 2$
	INX			;COUNT 0'S
2$:	ASL			;SHIFT TO NEXT SW
	BNE 1$			;IF THERE IS ONE
	LDA A,INPUT		;OTHER SWITCHES
	BIT A,M40		;TEST SW?
	BEQ 25$			;STILL ON, CONTINUE
	JMP RESET		;ELSE RESET TO GAME
25$:	ORA I,0B8		;REPEAT ABOVE. ALSO,IGNORE ENDSCREEN.
	SEC
	ROL
3$:	BCS 4$
	INX
4$:	ASL
	BNE 3$
;AT THIS POINT, X CONTAINS THE # OF SWITCHES CLOSED
	TXA			;SAVE X
	CLC			;FLAG "NO CHANGE"
5$:	DEX
	BMI 6$			;X OUT, HOW'S Y DOING
	DEY			;ELSE MATCH DEX WITH DEY
	BPL 5$			;EQUAL SO FAR, LOOP
	BMI 7$			;ELSE Y WAS LESS, BEEP

6$:	DEY
	BMI 8$			;X=Y, NO SOUND
7$:	SEC			;COME HERE TO BEEP
8$:	AND I,0F		;LIMIT TO 15 SWITCHES
	STA K			;SAVE SWITCHES FOR NEXT
	LDA I,032		;CTRLD, KICKER (SHIFTED RIGHT)
	ROL			;LINE IT UP AND PUT IN WHISTLE
	STA A,OUT1		;SET CTRLD=1, AND WHISTLE
	STA A,TOUT1		;FOR TBALL READER
				;---
				; WAIT A WHILE.
	LDX I,0			;MAKE X=0 (OR AT MOST 5)
9$:	CMP NX,0		;WASTE 6 CYCLES
	INX			;+2 MORE
	BNE 9$			;+ AT LEAST 3 (*256=3.7 MS.)
				;---
	LSR			;SET C IF ANY SWITCHES CHANGED
	LDA CROWD
	ORA I,20		;SET ATRACT BAR
	STA A,OUT2		;MAKE SURE SOUNDS ON
	STA A,WTCHDG		;KEEP DOG QUIET
;IF A SWITCH CHANGED, BUMP THE MOTION OBJECT PTR FOR BELOW TEST
	LDA J
	BCC 10$			;SKIP IF NO CHANGE
	ADC I,7			;ADDS 8, CUZ CARRY IS SET
10$:	AND I,018		;KEEP IT A VALID OBJECT PTR
	STA J

	.SBTTL	TBALL DISTANCE CALCULATIONS
TBCALC:
	LDA TBDIR
	TAX
	EOR TBDIRO
	STX TBDIRO
	STA TBDIRC
	LDX I,6
1$:	LDA X,TBCTR		;SAMPLE COUNTER VALUE
	SEC			;
	SBC X,OTB		;
	LSR TBDIR		;
	AND I,0F		;
	BEQ 2$			;0 STAYS 0
	BCC 2$			;+ STAYS +
	ORA I,0F0		;ELSE PUT IN SIGN
2$:	LSR TBDIRC		;IF TBALL DIRECTION CHANGED, IGNORE THE COUNT
	BCS 22$			;
	ADC X,TBHD		;
	BVC 21$			;IF BUCKET OVERFLOWS,
	EOR I,80		;THEN SET TO MAXIMUM
	ASL			;COUNT OF THE CORRECT
	LDA I,7F		;SIGN
	ADC I,0
21$:
	STA X,TBHD		;
22$:				;---
	LDA X,TBCTR
	SEC
	ORA I,0F		;MAKE LSB'S DON'T CARE
	SBC X,OTB		;TAKE OUT COUNT OF 4 MS AGO
	LSR
	LSR
	LSR
	LSR			;DOWN TO BOTTOM
	LSR TBDIR		;CHECK DIRECTION
	ORA I,0			;TSTA
	BEQ 3$
	BCC 3$
	ORA I,0F0
3$:	LSR TBDIRC		;IF TBALL DIRECTION CHANGED, IGNORE THE COUNT
	BCS 32$		;
	ADC X,TBVD
	BVC 31$			;IF BUCKET OVERFLOWS,
	EOR I,80		;THENSET TO MAXIMUM
	ASL			;COUNT OF THE CORRECT
	LDA I,7F		;SIGN
	ADC I,0
31$:
	STA X,TBVD
32$:
				;---
	LDA X,NEWTB		;
	STA X,OTB		; SAVE THE NEW INITIAL COUNTER VALUE.
	DEX
	DEX
	BPL 1$			;*********************
	TSX			;RETURN IF NOT IN
	BPL 63$			;IN TEST MODE
	RTS			;*********************
63$:
				;
				;---
TBTMOV:
	LDX I,6
10$:
				;---
	TXA			; NOW, MOVE THE OBJECTS.
	CLC			;
	ADC J			;
	TAY			;
	LDA X,TBVD		;
	CLC
	ADC Y,HVPOS
	STA Y,HVPOS		;
	LDA X,TBHD
	CLC
	ADC Y,HHPOS
	STA Y,HHPOS		;
	LDA I,0			;
	STA X,TBVD		;PREPARE FOR NEXT COUNT
	STA X,TBHD
				;---
	DEX
	DEX
	BPL 10$			;LOOP FOR BALL 0
	.SBTTL	SCROLL-FIELD TEST
SCFTST:				;---
	BIT INPUT+2		;
	BMI 1$			; SELECT 1, LEFT TEAM.
	INC SFDL		;ELSE MOVE TOWARD #0 (LEFT)
1$:				;
	BVS 2$			;
	DEC SFDL
2$:	LDA SFDL
	STA A,SFHPOS		;OUT TO HARINARE
;SET CROWD VOLUME PROPORTIONAL TO # OF SWITCHES CLOSED
	LDX K			;1-8 CLOSED SWITCHES
	DEX			;
	TXA			;
	ASL			;(N-1)*2
	BEQ 3$			;
	ADC I,1			;PLUSE 1 (BUT KEEP ZERO AT ZERO)
3$:
	STA CROWD		;USE TO TEST CROWD SOUND
;NOW DISPLAY CODE IN OPTION SWITCHES
	LDY INPUT+2		;GET OPTIONS
	LDX I,3			;4 OPTION SWITCHES
40$:				;---
	TYA			;PUT SWITCH INTO CARRY
	ROR
	TAY
	LDA I,66		;ZERO==>ON, CHAR IS 'N'
	BCC 42$
	LDA I,5E		;ONE==>OFF, CHAR IS 'F'
42$:				;---
	STA X,SCRFLD+46		;THIRD ROW, UNDER ROM RESULT
	DEX
	BPL 40$			;LOOP FOR NEXT SWITCH
				;---
	LDA SCRFLD+46		;SW3 AND SW4 INTERCHANGED ON PC
	LDX SCRFLD+47		;"ANOTHER SOFTWARE RESCUE"
	STA SCRFLD+47
	STX SCRFLD+46
	JMP SWTEST		;LOOP WHILE TEST SW IS ON
ERMSG:	.ASCII /BAD@ROM@OK/
	.ASCII /BAD@RAM@OK/
CKS7:	.BYTE GCKS7
EOPROG:	.REPT 1CA
	.BYTE 0
	.ENDR
	.VCTRS 7FFA,RESET,RESET,IRQ
	.END
                                                                                                                                                       